% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_cols.R
\name{clean_cols_nzv}
\alias{clean_cols_nzv}
\title{Find Variables With Near-Zero Variance}
\source{
\pkg{caret} package.
}
\usage{
clean_cols_nzv(data, freq_tol = 95/5, uniq_tol = 0.1, info = FALSE)
}
\arguments{
\item{data}{Data frame..}

\item{freq_tol}{The cutoff for the ratio of the most common value to the
second most common value. Must be between (51 / 49) and (99 / 1). Default
is 95 / 5. Many people use 90 / 10.}

\item{uniq_tol}{The cutoff for the percentage of distinct values out of the
number of total samples.}

\item{info}{Logical. If \code{FALSE}, the positions near-zero variance
variables is returned in a named integer(). If \code{TRUE}, a data frame
with variables and all information is returned. Default is \code{FALSE}}
}
\value{
For \code{nearZeroVar}: if \code{info = FALSE}, a vector of
integers corresponding to the column positions of the problematic
variables. If \code{infor = TRUE}, a data frame with all informations
on the variables.
}
\description{
Find variables With near-zero variance.
}
\details{
\code{clean_cols_nzv} diagnoses predictors that have one unique value (i.e. are
zero variance predictors) or predictors that are have both of the following
characteristics: they have very few unique values relative to the number of
samples and the ratio of the frequency of the most common value to the
frequency of the second most common value is large.
}
\section{Near-zero variance}{

To be flagged as near-zero variance, both following conditions must be met:
\describe{
\item{frequency ratio}{The frequency of the most prevalent value over the
frequency of the second most frequent value, called the \emph{frequency ratio}
must be above \code{freq_tol}.}
\item{percent of unique values}{The number of unique values divided by
the total number of samples, must be below \code{uniq_tol}.}
}
}

\examples{
n <- 50L
df <- data.frame(
  ran_int = rpois(n, lambda = 5),
  ran_num = rnorm(n),
  test_nzv = c(rep.int(1, times = 1), rep.int(2, times = n - 1)),
  test_zv = 1
)
out <- clean_cols_nzv(df, freq_tol = 95 / 5, uniq_tol = 0.1, info = FALSE)
stopifnot(identical(x = out, y = c("test_nzv" = 3L, "test_zv" = 4L)))
}
\author{
Max Kuhn
}
