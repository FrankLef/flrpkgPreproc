% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valid_range.R
\name{valid_range_hb}
\alias{valid_range_hb}
\title{Get the range using a factor of the median}
\usage{
valid_range_hb(data, cols, tol = 80/20, na.rm = TRUE)
}
\arguments{
\item{data}{Data.frame .}

\item{cols}{Character() with the names of the columns to compute.}

\item{tol}{Tolerance number. Must be between 51/49 and 99. Default is 80/20.}

\item{na.rm}{Flag used by \code{median(x, na.rm)} and \code{mad(x, na.rm)}.
Default value is \code{TRUE}.}
}
\value{
List of ranges with one element per column.
}
\description{
Get the range using a factor of the median.
}
\details{
This will compute ranges where the lower boundary is \code{median / tol} and
the upper boundary is \code{median * tol}. The tolerance \code{tol} is
loosely (\emph{very loosely}) based on hidiroglou-berthelot which is why the
function is called \code{hbRules}.

hidiroglou-berthelot:
Normally, multiplying then dividing the median to obtain boundaries is more
appropriate for skewed data. In a business case, the data is very often
skewed which is fine in that case. However in a business context, when
applied to more centrally distributed data,  such as as log-transformed sales
amount per invoice for example, it is unlikely that high
amounts are mistakes and should be selected. However, very large amounts
should be. In such a practical business context, where the upper bound is
relatively larger than the lower bound, experience has shown this
method to be quite relevant, robust and easy to understand.
}
\examples{
\dontrun{
TODO
}
}
